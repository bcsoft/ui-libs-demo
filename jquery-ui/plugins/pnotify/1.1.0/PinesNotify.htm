<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0034)http://pinesframework.org/pnotify/ -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>Pines Notify</title>
  <!-- Dev Notice -->
  <link href="./devnote.css" rel="stylesheet" type="text/css"/>
  <!-- jQuery -->
    <script type="text/javascript" src="../../../../../ui-libs/jquery/1.7/jquery.min.js"></script>
  <!-- jQuery UI -->
  <link type="text/css" href="../../../../../ui-libs/jquery-ui/1.8.16/themes/smoothness/jquery-ui.css" rel="stylesheet"/>
  <script type="text/javascript" src="../../../../../ui-libs/jquery-ui/1.8.16/ui/jquery-ui.js"></script> 
  <script type="text/javascript" src="../../../../../ui-libs/jquery-ui/1.8.16/ui/minified/i18n/jquery-ui-i18n.min.js"></script>
  <!-- Theme Switcher Widget -->
  <script type="text/javascript" src="../../../../../ui-libs/jquery-ui/themeSwitcher/switcher.js"></script>
  <!-- Oxygen Icons -->
  <link href="./oxygen/icons.css" rel="stylesheet" type="text/css"/> 
  <!-- JavaScript Source Formatting -->
  <script type="text/javascript" src="./includes/beautify.js"></script>
  <!--[if !IE]>-->
  <script type="text/javascript" src="./includes/shCore.js"></script>
  <script type="text/javascript" src="./includes/shBrushJScript.js"></script>
  <link href="./includes/shCoreDefault.css" rel="stylesheet" type="text/css"/>
  <!--<![endif]-->
  <!-- Pines Notify -->
  <script type="text/javascript" src="../../../../../ui-libs/jquery-ui/plugins/pnotify/1.1.0/jquery.pnotify.min.js"></script> 
  <link href="../../../../../ui-libs/jquery-ui/plugins/pnotify/1.1.0/jquery.pnotify.default.css" rel="stylesheet" type="text/css"/> 
  <link href="../../../../../ui-libs/jquery-ui/plugins/pnotify/1.1.0/jquery.pnotify.default.icons.css" rel="stylesheet" type="text/css"/> 
  <style type="text/css">
    /* <![CDATA[ */
    html, body {
      font-family: Arial,sans-serif;
      font-size: 12px;
    }
    .wrapper {
      background: transparent url(includes/watermark-small.png) no-repeat fixed bottom right;
      padding: 10px;
    }
    .wrapper.background {
      background: transparent url(includes/hoot.jpg) repeat scroll top center;
      /* http://www.flickr.com/photos/barloventomagico/2435316564/ */
    }
    .wrapper.background, .wrapper.background a, .wrapper.background .ui-widget-content {
      color: white;
      text-shadow: 2px 2px 1px black;
    }
    #header {
      height: 68px;
      position: relative;
    }
    #switcher-container {
      position: absolute;
      top: 5px;
      right: 5px;
    }
    #header img.header {
      position: absolute;
    }
    #header h1.header {
      text-align: center;
    }
    .main-description {
      font-size: 1.2em;
    }
    h2 {
      margin: .83em 0 .1em 0;
    }
    p {
      margin: 1em 0 .5em 0;
    }
    .featurelist {
      background: transparent none no-repeat 0 0 !important;
      margin: .5em 10px .5em 0;
      padding: .5em;
      float: left;
    }
    .featurelist ul {
      margin: 0;
      padding: 0;
      list-style-type: none;
    }
    .featurelist ul a {
      text-decoration: underline !important;
    }
    .featurelist ul .ui-icon {
      display: inline-block;
      position: relative;
      top: 4px;
      margin-right: .3em;
    }
    .featurelist ul img {
      vertical-align: middle;
      border: none 0;
    }
    .pf-group {
      background: transparent none no-repeat 0 0 !important;
      padding: 4px;
      margin: 5px auto;
    }
    .ui-widget {
      font-size: 75% !important;
    }
    .pf-group input.ui-button {
      padding: 2px !important;
      font-size: .92em !important;
      margin-bottom: 3px;
    }

    /* Source View */
    .source-dialog pre {
      border: 1px solid black;
      margin: .5em .5em 1em;
      padding: 1em;
      background: beige;
      color: midnightblue;
      display:-moz-inline-stack;
      display:inline-block;
      zoom:1;
      *display:inline;
    }
    .source-dialog > div {
      border-top: 1px solid black;
      border-bottom: 1px solid black;
      margin-bottom: 1em;
      display:-moz-inline-stack;
      display:inline-block;
      zoom:1;
      *display:inline;
    }
    .source-dialog > div div.syntaxhighlighter {
      overflow: visible !important;
      width: auto !important;
      display:-moz-inline-stack;
      display:inline-block;
      zoom:1;
      *display:inline;
    }

    /* Custom styled notice CSS */
    .ui-pnotify.custom {
      font-family: Arial, Helvetica, sans-serif;
      text-shadow: 2px 2px 3px black;
      font-size: 10pt;
    }
    .ui-pnotify.custom .ui-pnotify-container {
      background-color: #404040;
      background-image: none;
      border: none;
      -moz-border-radius: 10px;
      -webkit-border-radius: 10px;
      border-radius: 10px;
    }
    .ui-pnotify.custom .ui-pnotify-title {
      font-weight: bold;
      padding-left: 50px;
      color: #FFF;
    }
    .ui-pnotify.custom .ui-pnotify-text {
      padding-left: 50px;
      color: #FFF;
    }
    .ui-pnotify.custom .ui-pnotify-closer {
      position: absolute;
      bottom: 5px;
      right: 5px;
    }
    .ui-pnotify.custom .ui-pnotify-icon {
      float: left;
    }
    .ui-pnotify.custom .picon {
      margin: 3px;
      width: 33px;
      height: 33px;
    }

    /* Alternate stack initial positioning. */
    .ui-pnotify.stack-topleft {
      top: 15px;
      left: 15px;
      right: auto;
    }
    .ui-pnotify.stack-bottomleft {
      bottom: 15px;
      left: 15px;
      top: auto;
      right: auto;
    }
    /* This one is done through code, to show how it is done. Look down
       at the stack_bottomright variable in the JavaScript below. */
    .ui-pnotify.stack-bottomright {
      /* These are just CSS default values to reset the pnotify CSS. */
      right: auto;
      top: auto;
    }
    .ui-pnotify.stack-custom {
      /* Custom values have to be in pixels, because the code parses them. */
      top: 200px;
      left: 200px;
      right: auto;
    }
    .ui-pnotify.stack-custom2 {
      top: auto;
      left: auto;
      bottom: 200px;
      right: 200px;
    }
    /* ]]> */
  </style>
  <!--[if lt IE 8]>
  <style type="text/css">
    .featurelist ul {
      padding-left: 1em;
      list-style-type: disc;
    }
    .featurelist ul .ui-icon {
      display: none;
    }
  </style>
  <![endif]-->
  <script type="text/javascript">
    // <![CDATA[

    var permanotice;
    var tooltip;
    var _alert;
    var credit_shown = false;

    $(document).ready(function(){
      // This is how to change the default settings for the entire page.
      //$.pnotify.defaults.pnotify_width = "400px";
      // If you don't want new lines ("\n") automatically converted to breaks ("<br />")
      //$.pnotify.defaults.pnotify_insert_brs = false;

      $.pnotify({
        pnotify_title: "Pines Notify",
        pnotify_text: "Welcome. Try hovering over me. You can click things behind me, because I'm non-blocking.",
        pnotify_nonblock: true,
        pnotify_before_close: function(pnotify){
          // You can access the notice's options with this. It is read only.
          //pnotify.opts.pnotify_text;

          // You can change the notice's options after the timer like this:
          pnotify.pnotify({
            pnotify_title: pnotify.opts.pnotify_title+" - Enjoy your Stay",
            pnotify_before_close: null
          });
          pnotify.pnotify_queue_remove();
          return false;
        }
      });

      // This notice is used as a tooltip.
      var make_tooltip = function(){
        tooltip = $.pnotify({
          pnotify_title: "Tooltip",
          pnotify_text: "I'm not in a stack. I'm positioned like a tooltip with JavaScript.",
          pnotify_hide: false,
          pnotify_closer: false,
          pnotify_sticker: false,
          pnotify_history: false,
          pnotify_animate_speed: 100,
          pnotify_opacity: .9,
          pnotify_notice_icon: "ui-icon ui-icon-comment",
          // Setting stack to false causes Pines Notify to ignore this notice when positioning.
          pnotify_stack: false,
          pnotify_after_init: function(pnotify){
            // Remove the notice if the user mouses over it.
            pnotify.mouseout(function(){
              pnotify.pnotify_remove();
            });
          },
          pnotify_before_open: function(pnotify){
            // This prevents the notice from displaying when it's created.
            pnotify.pnotify({
              pnotify_before_open: null
            });
            return false;
          }
        });
      }
      // I put it in a function so I could show the source easily.
      make_tooltip();

      // This creates all those source buttons.
      $(".wrapper :button").each(function(){
        var button = $(this);
        if (!button.closest(".pf-group").length || button.val() == "Hoot (To See Transparency)") {
          button.button();
          return;
        }
        // Wrap the button in a container.
        var contain = $("<span />");
        contain = button.wrap(contain).parent();
        // Add a source button.
        $("<input type=\"button\" value=\"{}\" title=\"Show source code.\" />").click(function(){
          $(this).blur();
          var text = button.attr("onclick");
          if (!text && button.attr("onmouseover"))
            text = "// Mouse Over:\n"+button.attr("onmouseover")+"\n\n// Mouse Move:\n"+button.attr("onmousemove")+"\n\n// Mouse Out:\n"+button.attr("onmouseout");
          // IE needs this.
          if (text.toString) {
            text = text.toString();
            if (text.match(/^function (onclick|anonymous)[\n ]*\([^\)]*\)[\n ]*\{[\n\t ]*/))
              text = text.replace(/^function (onclick|anonymous)[\n ]*\([^\)]*\)[\n ]*\{[\n\t ]*/, "").replace(/[\n\t ]*}[\n\t ]*$/, "");
          }
          var dialog = $("<div title=\""+button.val()+" - Source\" class=\"source-dialog\"></div>");
          $("<pre class=\"brush: js; toolbar: false;\" />").text(js_beautify(text)).appendTo(dialog);
          if (text.match(/^\w*\([^\)]*\);$/)) {
            var f_name = text.replace(/\(.*/g, "");
            text = window[f_name].toString();
            $("<pre class=\"brush: js; toolbar: false;\" />").text(js_beautify(text)).appendTo(dialog);
          }
          if (text.match(/tooltip\.pnotify_display\(\);/)) {
            $("<pre class=\"brush: js; toolbar: false;\" />").text(js_beautify(make_tooltip.toString())).appendTo(dialog);
          }
          dialog.dialog({width: "auto"});
          // Make sure the dialog isn't more than 800x600.
          // Can't just add max-height cause that means it can't be resized beyond.
          if (dialog.width() > 800)
            dialog.dialog("option", "width", 800).dialog("option", "position", "center");
          if (dialog.height() > 600)
            dialog.dialog("option", "height", 600).dialog("option", "position", "center");
          // Can't call .all(), it doesn't  work.
          if (typeof SyntaxHighlighter != "undefined")
            SyntaxHighlighter.highlight();
        }).appendTo(contain);
        contain.buttonset();
      });


      //主题切换器
      $('#switcher').themeswitcher({
        initialText:'切换主题',
        buttonPreText:'主题：',
        height:400,
        uiversion:"1.8.16",
        root:"../../../../.."
      });
//      if ($.fn.themeswitcher) {
//        $('#switcher').themeswitcher();
//      } else {
//        $('#switcher').html("Couldn't load theme switcher widget.")
//      }
    });

    function show_rich() {
      $.pnotify({
        pnotify_title: '<span style="color: green;">Rich Content Notice</span>',
        pnotify_text: '<span style="color: blue;">Look at my beautiful <strong>strong</strong>, <em>emphasized</em>, and <span style="font-size: 1.5em;">large</span> text.</span>'
      });
    }

    function consume_alert() {
      if (_alert) return;
      _alert = window.alert;
      window.alert = function(message) {
        $.pnotify({
          pnotify_title: 'Alert',
          pnotify_text: message
        });
      };
    }

    function release_alert() {
      if (!_alert) return;
      window.alert = _alert;
      _alert = null;
    }

    function fake_load() {
      var cur_value = 1;
      var progress;

      // Make a loader.
      var loader = $.pnotify({
        pnotify_title: "Fake Load",
        pnotify_text: "<div class=\"progress_bar\" />",
        pnotify_notice_icon: 'picon picon-throbber',
        pnotify_hide: false,
        pnotify_closer: false,
        pnotify_sticker: false,
        pnotify_history: false,
        pnotify_before_open: function(pnotify){
          progress = pnotify.find("div.progress_bar");
          progress.progressbar({value: cur_value});
          // Pretend to do something.
          var timer = setInterval(function(){
            if (cur_value >= 100) {
              // Remove the interval.
              window.clearInterval(timer);
              loader.pnotify_remove();
              return;
            }
            //cur_value += Math.ceil(3 * ((100 - cur_value) / 100));
            cur_value += .3;
            progress.progressbar('option', 'value', cur_value);
          }, 2);
        }
      });
    }

    function dyn_notice() {
      var percent = 0;
      var notice = $.pnotify({
        pnotify_title: "Please Wait",
        pnotify_type: 'info',
        pnotify_info_icon: 'picon picon-throbber',
        pnotify_hide: false,
        pnotify_closer: false,
        pnotify_sticker: false,
        pnotify_opacity: .75,
        pnotify_width: "150px"
      });

      setTimeout(function(){
        notice.pnotify({pnotify_title: false});
        var interval = setInterval(function(){
          percent += 2;
          var options = {
            pnotify_text: percent+"% complete."
          };
          if (percent == 80)
            options.pnotify_title = "Almost There";
          if (percent >= 100) {
            window.clearInterval(interval);
            options.pnotify_title = "Done!";
            options.pnotify_type = "notice";
            options.pnotify_hide = true;
            options.pnotify_closer = true;
            options.pnotify_sticker = true;
            options.pnotify_notice_icon = 'picon picon-task-complete';
            options.pnotify_opacity = 1;
            options.pnotify_shadow = true;
            options.pnotify_width = $.pnotify.defaults.pnotify_width;
            //options.pnotify_min_height = "300px";
          }
          notice.pnotify(options);
        }, 120);
      }, 2000);
    }

    function timed_notices(n) {
      var start_time = new Date().getTime();
      var end_time;
      var options = {
        pnotify_title: "Notice Benchmark",
        pnotify_text: "Testing notice speed.",
        pnotify_animation: 'none',
        pnotify_delay: 0,
        pnotify_history: false
      };
      for (var i = 0; i < n; i++) {
        if (i + 1 == n) {
          options.pnotify_after_close = function(pnotify){
            // Remove this callback.
            pnotify.pnotify({
              pnotify_after_close: null
            });
            end_time = new Date().getTime();
            alert("Testing complete:\n\nTotal Notices: "+n+
              "\nTotal Time: "+(end_time - start_time)+"ms ("+((end_time - start_time) / 1000)+"s)"+
              "\nAverage Time: "+((end_time - start_time) / n)+"ms ("+((end_time - start_time) / n / 1000)+"s)")
          };
        }
        $.pnotify(options);
      }
    }

    /*********** Custom Stacks ***********
     * A stack is an object which Pines Notify uses to determine where
     * to position notices. A stack has two mandatory variables, dir1
     * and dir2. dir1 is the first direction in which the notices are
     * stacked. When the notices run out of room in the window, they
     * will move over in the direction specified by dir2. The directions
     * can be "up", "down", "right", or "left". Stacks are independent
     * of each other, so a stack doesn't know and doesn't care if it
     * overlaps (and blocks) another stack. The default stack, which can
     * be changed like any other default, goes down, then left. Stack
     * objects are used and manipulated by Pines Notify, and therefore,
     * should be a variable when passed. So, calling something like
     *
     * $.pnotify({pnotify_stack: {"dir1": "down", "dir2": "left"}});
     *
     * will NOT work. It will create a notice, but that notice will be
     * in its own stack and may overlap other notices.
     */
    var stack_topleft = {"dir1": "down", "dir2": "right", "push": "top"};
    var stack_bottomleft = {"dir1": "right", "dir2": "up"};
    var stack_custom = {"dir1": "right", "dir2": "down"};
    var stack_custom2 = {"dir1": "left", "dir2": "up", "push": "top"};
    /*********** Positioned Stack ***********
     * This stack is initially positioned through code instead of CSS.
     * This is done through two extra variables. firstpos1 and firstpos2
     * are pixel values, relative to a viewport edge. dir1 and dir2,
     * respectively, determine which edge. It is calculated as follows:
     *
     * - dir = "up" - firstpos is relative to the bottom of viewport.
     * - dir = "down" - firstpos is relative to the top of viewport.
     * - dir = "right" - firstpos is relative to the left of viewport.
     * - dir = "left" - firstpos is relative to the right of viewport.
     */
    var stack_bottomright = {"dir1": "up", "dir2": "left", "firstpos1": 15, "firstpos2": 15};

    function show_stack_topleft(type) {
      var opts = {
        pnotify_title: "Over Here",
        pnotify_text: "Check me out. I'm in a different stack.",
        pnotify_addclass: "stack-topleft",
        pnotify_stack: stack_topleft
      };
      switch (type) {
        case 'error':
          opts.pnotify_title = "Oh No";
          opts.pnotify_text = "Watch out for that water tower!";
          opts.pnotify_type = "error";
          break;
        case 'info':
          opts.pnotify_title = "Breaking News";
          opts.pnotify_text = "Have you met Ted?";
          opts.pnotify_type = "info";
          break;
      }
      $.pnotify(opts);
    };
    function show_stack_bottomleft(type) {
      var opts = {
        pnotify_title: "Over Here",
        pnotify_text: "Check me out. I'm in a different stack.",
        pnotify_addclass: "stack-bottomleft",
        pnotify_stack: stack_bottomleft
      };
      switch (type) {
        case 'error':
          opts.pnotify_title = "Oh No";
          opts.pnotify_text = "Watch out for that water tower!";
          opts.pnotify_type = "error";
          break;
        case 'info':
          opts.pnotify_title = "Breaking News";
          opts.pnotify_text = "Have you met Ted?";
          opts.pnotify_type = "info";
          break;
      }
      $.pnotify(opts);
    };
    function show_stack_bottomright(type) {
      var opts = {
        pnotify_title: "Over Here",
        pnotify_text: "Check me out. I'm in a different stack.",
        pnotify_addclass: "stack-bottomright",
        pnotify_stack: stack_bottomright
      };
      switch (type) {
        case 'error':
          opts.pnotify_title = "Oh No";
          opts.pnotify_text = "Watch out for that water tower!";
          opts.pnotify_type = "error";
          break;
        case 'info':
          opts.pnotify_title = "Breaking News";
          opts.pnotify_text = "Have you met Ted?";
          opts.pnotify_type = "info";
          break;
      }
      $.pnotify(opts);
    };
    function show_stack_custom(type) {
      var opts = {
        pnotify_title: "Over Here",
        pnotify_text: "Check me out. I'm in a different stack.",
        pnotify_addclass: "stack-custom",
        pnotify_stack: stack_custom
      };
      switch (type) {
        case 'error':
          opts.pnotify_title = "Oh No";
          opts.pnotify_text = "Watch out for that water tower!";
          opts.pnotify_type = "error";
          break;
        case 'info':
          opts.pnotify_title = "Breaking News";
          opts.pnotify_text = "Have you met Ted?";
          opts.pnotify_type = "info";
          break;
      }
      $.pnotify(opts);
    };
    function show_stack_custom2(type) {
      var opts = {
        pnotify_title: "Over Here",
        pnotify_text: "Check me out. I'm in a different stack.",
        pnotify_addclass: "stack-custom2",
        pnotify_stack: stack_custom2
      };
      switch (type) {
        case 'error':
          opts.pnotify_title = "Oh No";
          opts.pnotify_text = "Watch out for that water tower!";
          opts.pnotify_type = "error";
          break;
        case 'info':
          opts.pnotify_title = "Breaking News";
          opts.pnotify_text = "Have you met Ted?";
          opts.pnotify_type = "info";
          break;
      }
      $.pnotify(opts);
    };
    function show_stack_info() {
      var modal_overlay;
      if (typeof info_box != "undefined") {
        info_box.pnotify_display();
        return;
      }
      info_box = $.pnotify({
        pnotify_title: "Pines Notify Stacks",
        pnotify_text: "Stacks are used to position notices and determine where new notices will go when they're created. Each notice that's placed into a stack will be positioned related to the other notices in that stack. There is no limit to the number of stacks, and no limit to the number of notices in each stack.",
        pnotify_type: "info",
        pnotify_info_icon: "picon picon-object-order-raise",
        pnotify_delay: 20000,
        pnotify_history: false,
        pnotify_stack: false,
        pnotify_before_open: function(pnotify){
          // Position this notice in the center of the screen.
          pnotify.css({
            "top": ($(window).height() / 2) - (pnotify.height() / 2),
            "left": ($(window).width() / 2) - (pnotify.width() / 2)
          });
          // Make a modal screen overlay.
          if (modal_overlay)
            modal_overlay.fadeIn("fast");
          else
            modal_overlay = $("<div />", {
              "class": "ui-widget-overlay",
              "css": {
                "display": "none",
                "position": "fixed",
                "top": "0",
                "bottom": "0",
                "right": "0",
                "left": "0"
              }
            }).appendTo("body").fadeIn("fast");
        },
        pnotify_before_close: function(){
          modal_overlay.fadeOut("fast");
        }
      });
    };

    // ]]>
  </script>
  <!-- Pines Form (For the form notice.) -->
  <link href="./includes/pform.css" media="all" rel="stylesheet" type="text/css"/>
  <!--[if lt IE 8]>
  <link href="./includes/pform-ie-lt-8.css" media="all" rel="stylesheet" type="text/css" />
  <![endif]-->
  <style type="text/css">
    /* <![CDATA[ */
    .pform_custom div.pf-element .pf-label, .pform_custom div.pf-element .pf-note {
      width: 130px; /* Width of labels. */
      text-align: right;
    }
    .pform_custom div.pf-element .pf-group {
       margin-left: 130px; /* Same as width of labels. */
    }
    .pform_custom div.pf-buttons {
      padding-left: 115px; /* Width of labels + margin to inputs - button spacing. */
    }
    /* ]]> */
  </style>
  <!--[if lt IE 7]>
  <style type="text/css">
    .pform_custom div.pf-buttons {
      width: 225px; /* Custom form width - custom button div left padding - 20px (for IE's default padding.) */
    }
  </style>
  <![endif]-->
</head>
  <body>
    <div class="ui-widget-content ui-corner-all ui-helper-clearfix">
      <div class="wrapper">
        <div id="header" class="ui-widget-header ui-corner-all">
          <div id="switcher-container">
          <div id="switcher"></div>
          </div>
          <img class="header" src="./includes/default_logo.png" alt="Pines Logo"/>
          <h1 class="header">Pines Notify jQuery Plugin</h1>
        </div>
        <p style="float: right;">
          <a href="http://sourceforge.net/projects/pines"><img src="./includes/sflogo.gif" width="150" height="40" alt="Get Pines at SourceForge.net. Fast, secure and Free Open Source software downloads" style="border: none;"></a>
        </p>
        <p class="main-description">
          Pines Notify is a JavaScript notification plugin, developed
          by Hunter Perrin as part of
          <a href="http://pinesframework.org/">Pines</a>.
          It is designed to provide an unparalleled level of
          flexibility, while still being very easy to implement and
          use. It uses the jQuery UI CSS library for styling, which
          means it is fully and easily themeable. Try out some of the
          readymade themes using the selector in the top right corner
          of this page.
          Pines Notify is distributed under the <a href="http://www.gnu.org/licenses/gpl.html" onclick="window.open(this.href); return false;">GPL</a>, <a href="http://www.gnu.org/licenses/lgpl.html" onclick="window.open(this.href); return false;">LGPL</a>, and <a href="http://www.mozilla.org/MPL/MPL-1.1.html" onclick="window.open(this.href); return false;">MPL</a>. This triple copyleft licensing model avoids incompatibility with other open source licenses.
        </p>
        <div class="dev-note ui-state-error ui-corner-all" style="display: none; padding: 1em; text-align: center;">
          <h3 style="margin: 0;">Caution warning danger attention!</h3>
          <p style="margin: .5em 0 0;">
            This is the development site. It's a playground for
            bleeding edge features and code that probably won't
            work. You should head over to the
            <a href="./PinesNotify_files/PinesNotify.htm"><button type="button" style="text-decoration: none !important; font-weight: bold !important;" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button" aria-disabled="false"><span class="ui-button-text">Main Site</span></button></a>
          </p>
        </div>
        <p class="stable-note" style="display: none;">
          This is the stable site. You can download code here that's
          tested and proven to work. However, if you like to live
          dangerously, you can also check out the
          <a href="http://pines.hg.sourceforge.net/hgweb/pines/pnotify/raw-file/tip/index.html">development site</a>.
        </p>
        <p style="text-align: center;">
          <button type="button" onclick="window.location=&#39;https://sourceforge.net/projects/pines/files/pnotify/1.1/pnotify-1.1.0.zip/download&#39;;" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button" aria-disabled="false"><span class="ui-button-text"><strong style="font-size: large;">Download Pines Notify</strong></span></button>
        </p>
        <h2>Features</h2>
        <div class="ui-helper-clearfix">
          <div class="featurelist ui-widget-content ui-corner-all">
            <ul>
              <li><span class="ui-icon ui-icon-bullet"></span>Timed hiding with visual effects.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Sticky (no automatic hiding) notices.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Optional hide and sticker buttons.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Supports dynamically updating text, title, icon, type...</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Stacks allow notice sets to stack independently.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Control stack direction and push to top or bottom.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Non-blocking notices for less intrusive use.</li>
            </ul>
          </div>
          <div class="featurelist ui-widget-content ui-corner-all">
            <ul>
              <li><span class="ui-icon ui-icon-bullet"></span>Supports HTML (including forms) in title and text.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Can also escape HTML to prevent XSS attack.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Variable opacity.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Supports Pines icons/jQuery UI icons/any CSS based icons.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Supports custom classes for individual notice styling.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Standard and custom effects.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Optional drop shadows.</li>
            </ul>
          </div>
          <div class="featurelist ui-widget-content ui-corner-all">
            <ul>
              <li><span class="ui-icon ui-icon-bullet"></span>Three notification types: notice, info, and error.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>Callbacks for various events, which can cancel events.</li>
              <li><span class="ui-icon ui-icon-bullet"></span>History viewer allows user to review previous notices.</li>
              <li><span class="ui-icon ui-icon-bullet"></span><a href="http://validator.w3.org/check?uri=referer">XHTML 1.0 Strict compliance.</a></li>
              <li><span class="ui-icon ui-icon-bullet"></span><a href="http://jqueryui.com/themeroller/"><img src="./includes/themeroller-ready.png" alt="ThemeRoller Ready"></a></li>
            </ul>
          </div>
        </div>
        <h2>Simple Demos</h2>
        <div class="pf-group ui-widget-content ui-corner-all">
          <input value="Hoot (To See Transparency)" onclick="$(&#39;.wrapper&#39;).toggleClass(&#39;background&#39;); if (!credit_shown) $.pnotify({
            pnotify_title: &#39;Picture Credit&#39;,
            pnotify_text: &#39;Owl picture courtesy of:\n&lt;a href=\&#39;http://www.flickr.com/photos/barloventomagico/\&#39; onclick=\&#39;window.open(this.href); return false;\&#39;&gt;barloventomagico&lt;/a&gt;&#39;,
            pnotify_opacity: .8
          }); credit_shown = true;" style="float: right;" type="button" class="ui-button ui-widget ui-state-default ui-corner-all" role="button" aria-disabled="false">
          <span class="ui-buttonset"><input value="Regular Notice" onclick="$.pnotify({
            pnotify_title: &#39;Regular Notice&#39;,
            pnotify_text: &#39;Check me out! I\&#39;m a notice.&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Sticky Notice" onclick="$.pnotify({
            pnotify_title: &#39;Sticky Notice&#39;,
            pnotify_text: &#39;Check me out! I\&#39;m a sticky notice. You\&#39;ll have to close me yourself.&#39;,
            pnotify_hide: false
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Transparent Notice" onclick="$.pnotify({
            pnotify_title: &#39;See Through Notice&#39;,
            pnotify_text: &#39;No one ever pays attention to me. Why should they? I\&#39;m practically invisible.&#39;,
            pnotify_opacity: .8
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Shadow Notice" onclick="$.pnotify({
            pnotify_title: &#39;Shadow Notice&#39;,
            pnotify_text: &#39;I have a shadow. It makes me pop out!\n\nNote: Shadows do not work in IE.&#39;,
            pnotify_shadow: true
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Pines Icon Notice" onclick="$.pnotify({
            pnotify_title: &#39;Pines Icon Notice&#39;,
            pnotify_text: &#39;I have an icon that uses the Pines icon styles.&#39;,
            pnotify_notice_icon: &#39;picon picon-mail-unread-new&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="jQuery UI Icon Notice" onclick="$.pnotify({
            pnotify_title: &#39;jQuery UI Icon Notice&#39;,
            pnotify_text: &#39;I have an icon that uses the jQuery UI icon styles.&#39;,
            pnotify_notice_icon: &#39;ui-icon ui-icon-mail-closed&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="No Icon Notice" onclick="$.pnotify({
            pnotify_title: &#39;No Icon Notice&#39;,
            pnotify_text: &#39;I have no icon.&#39;,
            pnotify_notice_icon: &#39;&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Simple Notice" onclick="$.pnotify(&#39;Check me out! I\&#39;m a notice.&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Number Notice" onclick="$.pnotify(Math.round(Math.random()*9999));" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
        </div>

        <div class="pf-group ui-widget-content ui-corner-all">
          <span class="ui-buttonset"><input value="Regular Info" onclick="$.pnotify({
            pnotify_title: &#39;New Thing&#39;,
            pnotify_text: &#39;Just to let you know, something happened.&#39;,
            pnotify_type: &#39;info&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Sticky Info" onclick="$.pnotify({
            pnotify_title: &#39;Sticky Info&#39;,
            pnotify_text: &#39;Sticky info, you know, like a newspaper covered in honey.&#39;,
            pnotify_type: &#39;info&#39;,
            pnotify_hide: false
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Transparent Info" onclick="$.pnotify({
            pnotify_title: &#39;See Through Info&#39;,
            pnotify_text: &#39;Not only does it not matter, but I don\&#39;t even care if you see this info.&#39;,
            pnotify_type: &#39;info&#39;,
            pnotify_opacity: .8
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Shadow Info" onclick="$.pnotify({
            pnotify_title: &#39;Shadow Info&#39;,
            pnotify_text: &#39;I have a shadow. It makes me pop out!&#39;,
            pnotify_type: &#39;info&#39;,
            pnotify_shadow: true
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Pines Icon Info" onclick="$.pnotify({
            pnotify_title: &#39;Pines Icon Info&#39;,
            pnotify_text: &#39;Something is encrypted. Check out my icon, it shows that you\&#39;re secure because our encryption uses padlocks.&#39;,
            pnotify_type: &#39;info&#39;,
            pnotify_info_icon: &#39;picon picon-document-encrypt&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="jQuery UI Icon Info" onclick="$.pnotify({
            pnotify_title: &#39;jQuery UI Icon Info&#39;,
            pnotify_text: &#39;Something is encrypted. Check out my icon, it shows that you\&#39;re secure because our encryption uses padlocks.&#39;,
            pnotify_type: &#39;info&#39;,
            pnotify_info_icon: &#39;ui-icon ui-icon-locked&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="No Icon Info" onclick="$.pnotify({
            pnotify_title: &#39;No Icon Info&#39;,
            pnotify_text: &#39;I have no icon.&#39;,
            pnotify_type: &#39;info&#39;,
            pnotify_info_icon: &#39;&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
        </div>

        <div class="pf-group ui-widget-content ui-corner-all">
          <span class="ui-buttonset"><input value="Regular Error" onclick="$.pnotify({
            pnotify_title: &#39;Oh No!&#39;,
            pnotify_text: &#39;Something terrible happened.&#39;,
            pnotify_type: &#39;error&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Sticky Error" onclick="$.pnotify({
            pnotify_title: &#39;Uh Oh!&#39;,
            pnotify_text: &#39;Something really terrible happened. You really need to read this, so I won\&#39;t close automatically.&#39;,
            pnotify_type: &#39;error&#39;,
            pnotify_hide: false
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Transparent Error" onclick="$.pnotify({
            pnotify_title: &#39;See Through Error&#39;,
            pnotify_text: &#39;There\&#39;s an error, but no one cares.&#39;,
            pnotify_type: &#39;error&#39;,
            pnotify_opacity: .8
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Shadow Error" onclick="$.pnotify({
            pnotify_title: &#39;Shadow Error&#39;,
            pnotify_text: &#39;I have a shadow. It makes me pop out!&#39;,
            pnotify_type: &#39;error&#39;,
            pnotify_shadow: true
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Pines Icon Error" onclick="$.pnotify({
            pnotify_title: &#39;Pines Icon Error&#39;,
            pnotify_text: &#39;Oh no. Something\&#39;s wrong with your network, and I\&#39;m showing you visually using an appropriate icon to indicate the type of error that has occured. You know, network.&#39;,
            pnotify_type: &#39;error&#39;,
            pnotify_error_icon: &#39;picon picon-network-wireless&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="jQuery UI Icon Error" onclick="$.pnotify({
            pnotify_title: &#39;jQuery UI Icon Error&#39;,
            pnotify_text: &#39;Oh no. Something\&#39;s wrong with your network, and I\&#39;m showing you visually using an appropriate icon to indicate the type of error that has occured. You know, network.&#39;,
            pnotify_type: &#39;error&#39;,
            pnotify_error_icon: &#39;ui-icon ui-icon-signal-diag&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="No Icon Error" onclick="$.pnotify({
            pnotify_title: &#39;No Icon Error&#39;,
            pnotify_text: &#39;I have no icon.&#39;,
            pnotify_type: &#39;error&#39;,
            pnotify_error_icon: &#39;&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
        </div>

        <h2>Advanced Demos</h2>
        <div class="pf-group ui-widget-content ui-corner-all">
          <span class="ui-buttonset"><input value="No Sticky Button" onclick="$.pnotify({
            pnotify_title: &#39;No Sticky Button Notice&#39;,
            pnotify_text: &#39;Check me out! I\&#39;m a sticky notice with no unsticky button. You\&#39;ll have to close me yourself.&#39;,
            pnotify_hide: false,
            pnotify_sticker: false
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Permanent Buttons" onclick="$.pnotify({
            pnotify_title: &#39;Permanent Buttons Notice&#39;,
            pnotify_text: &#39;My buttons are really lonely, so they\&#39;re gonna hang out with us.&#39;,
            pnotify_closer_hover: false,
            pnotify_sticker_hover: false
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Big Notice" onclick="$.pnotify({
            pnotify_title: &#39;Big Notice&#39;,
            pnotify_text: &#39;Check me out! I\&#39;m tall and wide, even though my text isn\&#39;t.&#39;,
            pnotify_width: &#39;500px&#39;,
            pnotify_min_height: &#39;400px&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="No History Notice" onclick="$.pnotify({
            pnotify_title: &#39;No History Notice&#39;,
            pnotify_text: &#39;I\&#39;m not part of the notice history, so if you redisplay the last message, it won\&#39;t be me.&#39;,
            pnotify_history: false
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="No Mouse Reset Notice" onclick="$.pnotify({
            pnotify_title: &#39;No Mouse Reset Notice&#39;,
            pnotify_text: &#39;I don\&#39;t care if you move your mouse over me, I\&#39;ll disappear when I want.&#39;,
            pnotify_mouse_reset: false
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Notice with Callbacks" onclick="var dont_alert = function(){};
          $.pnotify({
            pnotify_title: &#39;I\&#39;m Here&#39;,
            pnotify_text: &#39;I have a callback for each of my events. I\&#39;ll call all my callbacks while I change states.&#39;,
            pnotify_before_init: function(opts){
              var source_note = &#39;Return false to cancel the notice.&#39;;
              alert(&#39;I\&#39;m called before the notice initializes. I\&#39;m passed the options used to make the notice. I can modify them. Watch me replace the word callback with tire iron!&#39;);
              opts.pnotify_text = opts.pnotify_text.replace(/callback/g, &#39;tire iron&#39;);
            },
            pnotify_after_init: function(pnotify){
              alert(&#39;I\&#39;m called after the notice initializes. I\&#39;m passed the pnotify object for the current notice: &#39;+pnotify+&#39;\n\nThere are more callbacks you can assign, but this is the last notice you\&#39;ll see. Check the code to see them all.&#39;);
            },
            pnotify_before_open: function(pnotify){
              var source_note = &#39;Return false to cancel opening.&#39;;
              dont_alert(&#39;I\&#39;m called before the notice opens. I\&#39;m passed the pnotify object for the current notice: &#39;+pnotify);
            },
            pnotify_after_open: function(pnotify){
              dont_alert(&#39;I\&#39;m called after the notice opens. I\&#39;m passed the pnotify object for the current notice: &#39;+pnotify);
            },
            pnotify_before_close: function(pnotify){
              var source_note = &#39;Return false to cancel close. Use pnotify.pnotify_queue_remove() to set the removal timer again.&#39;;
              dont_alert(&#39;I\&#39;m called before the notice closes. I\&#39;m passed the pnotify object for the current notice: &#39;+pnotify);
            },
            pnotify_after_close: function(pnotify){
              var source_note = &#39;Return false to cancel removal from the DOM.&#39;;
              dont_alert(&#39;I\&#39;m called after the notice closes. I\&#39;m passed the pnotify object for the current notice: &#39;+pnotify);
            }
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Fast Fading Notice" onclick="$.pnotify({
            pnotify_title: &#39;Fast Fading Notice&#39;,
            pnotify_text: &#39;I fade in and out really quickly.&#39;,
            pnotify_animate_speed: &#39;fast&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="No Effect Notice" onclick="$.pnotify({
            pnotify_title: &#39;No Effect Notice&#39;,
            pnotify_text: &#39;I don\&#39;t even bother to animate. I\&#39;m too cool for that.&#39;,
            pnotify_animation: &#39;none&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Rich Notice" onclick="show_rich();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Pretend Loader" onclick="fake_load();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Dynamic Notice" onclick="dyn_notice();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Notice to Error to Info" onclick="$.pnotify({
            pnotify_title: &#39;Notice&#39;,
            pnotify_text: &#39;Right now I\&#39;m a notice.&#39;,
            pnotify_before_close: function(pnotify){
              pnotify.pnotify({
                pnotify_title: &#39;Error&#39;,
                pnotify_text: &#39;Uh oh. Now I\&#39;ve become an error.&#39;,
                pnotify_type: &#39;error&#39;,
                pnotify_before_close: function(pnotify){
                  pnotify.pnotify({
                    pnotify_title: &#39;Info&#39;,
                    pnotify_text: &#39;Oh, nevermind. Everything\&#39;s cool now.&#39;,
                    pnotify_type: &#39;info&#39;,
                    pnotify_before_close: null
                  });
                  pnotify.pnotify_queue_remove();
                  pnotify.effect(&#39;bounce&#39;);
                  return false;
                }
              });
              pnotify.pnotify_queue_remove();
              pnotify.effect(&#39;bounce&#39;);
              return false;
            }
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Permanotice" onclick="if (permanotice) {
            permanotice.pnotify_display();
          } else {
            permanotice = $.pnotify({
              pnotify_title: &#39;Now Look Here&#39;,
              pnotify_text: &#39;There\&#39;s something you need to know, and I won\&#39;t go away until you come to grips with it.&#39;,
              pnotify_nonblock: true,
              pnotify_hide: false,
              pnotify_closer: false,
              pnotify_sticker: false
            });
          }" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Remove Permanotice" onclick="if (permanotice.pnotify_remove) permanotice.pnotify_remove();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Non-Blocking Notice" onclick="$.pnotify({
            pnotify_title: &#39;Non-Blocking Notice&#39;,
            pnotify_text: &#39;I\&#39;m a special kind of notice called &quot;non-blocking&quot;. When you hover over me I\&#39;ll fade to show the elements underneath. Feel free to click any of them just like I wasn\&#39;t even here.\n\nNote: HTML links don\&#39;t trigger in some browsers, due to security settings.&#39;,
            pnotify_nonblock: true,
            pnotify_nonblock_opacity: .2
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Form Notice" onclick="var notice = $.pnotify({
            pnotify_text: $(&#39;#form_notice&#39;).html(),
            pnotify_notice_icon: &#39;&#39;,
            pnotify_width: &#39;auto&#39;,
            pnotify_hide: false,
            pnotify_closer: false,
            pnotify_sticker: false,
            pnotify_insert_brs: false
          });
          notice.find(&#39;form.pf-form&#39;).submit(function(){
            var username = $(this).find(&#39;input[name=username]&#39;).val();
            if (!username) {
              alert(&#39;Please provide a username.&#39;);
              return false;
            }
            notice.pnotify({
              pnotify_title: &#39;Welcome&#39;,
              pnotify_text: &#39;Successfully logged in as &#39;+username,
              pnotify_notice_icon: $.pnotify.defaults.pnotify_notice_icon,
              pnotify_width: $.pnotify.defaults.pnotify_width,
              pnotify_hide: true,
              pnotify_closer: true,
              pnotify_sticker: true
            });
            return false;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <div id="form_notice" style="display: none;">
            <form class="pf-form pform_custom" action="" method="post">
              <div class="pf-element pf-heading">
                <h1>Login to Continue</h1>
                <p>Just an example.</p>
              </div>
              <div class="pf-element">
                <label>
                  <span class="pf-label">Username</span>
                  <input class="pf-field ui-widget-content ui-corner-all" type="text" name="username">
                </label>
              </div>
              <div class="pf-element">
                <label>
                  <span class="pf-label">Password</span>
                  <input class="pf-field ui-widget-content ui-corner-all" type="password" name="password">
                </label>
              </div>
              <div class="pf-element">
                <label>
                  <span class="pf-label">Remember Me</span>
                  <span class="pf-note">Lasts for 2 weeks.</span>
                  <input class="pf-field" type="checkbox" name="remember">
                </label>
              </div>
              <div class="pf-element pf-buttons pf-centered">
                <input class="pf-button ui-state-default ui-corner-all ui-priority-primary" type="submit" name="submit" value="Submit">
                <input class="pf-button ui-state-default ui-corner-all ui-priority-secondary" type="reset" name="reset" value="Reset">
              </div>
            </form>
          </div>
          <span class="ui-buttonset"><input value="Escaped Notice" onclick="$.pnotify({
            pnotify_title: &#39;&lt;em&gt;Escaped Notice&lt;/em&gt;&#39;,
            pnotify_title_escape: true,
            pnotify_text: $(&#39;#evil_html&#39;).html(),
            pnotify_text_escape: true
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <div id="evil_html" style="display: none;">
            <div>As you can see, I don't allow HTML in my content.</div>
            <div>This prevents things like cross site scripting attacks:</div>
            <script type="text/javascript">
              (function(){
                // Here would be the XSS attack.
              })()
            </script>
          </div>
          <span class="ui-buttonset"><input value="Custom Styled Notice" onclick="$.pnotify({
            pnotify_title: &#39;Custom Styling&#39;,
            pnotify_text: &#39;I have an additional class that\&#39;s used to give me special styling. I always wanted to be pretty.&#39;,
            pnotify_addclass: &#39;custom&#39;,
            pnotify_notice_icon: &#39;picon picon-32 picon-fill-color&#39;,
            pnotify_opacity: .8,
            pnotify_nonblock: true,
            pnotify_nonblock_opacity: .2
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
        </div>

        <div class="pf-group ui-widget-content ui-corner-all">
          <span>
            Examples of Custom Stacks:
            <span class="ui-buttonset"><input style="margin-left: 10px;" value="What are stacks?" onclick="show_stack_info();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          </span>
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Notice" onclick="show_stack_topleft(&#39;notice&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Info" onclick="show_stack_topleft(&#39;info&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Error" onclick="show_stack_topleft(&#39;error&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          Top Left. Moves down, then right. Pushes to stack top.
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Notice" onclick="show_stack_bottomleft(&#39;notice&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Info" onclick="show_stack_bottomleft(&#39;info&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Error" onclick="show_stack_bottomleft(&#39;error&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          Bottom Left. Moves right, then up. Pushes to stack bottom.
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Notice" onclick="show_stack_bottomright(&#39;notice&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Info" onclick="show_stack_bottomright(&#39;info&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Error" onclick="show_stack_bottomright(&#39;error&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          Bottom Right. Moves up, then left. Pushes to stack bottom.
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Notice" onclick="show_stack_custom(&#39;notice&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Info" onclick="show_stack_custom(&#39;info&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Error" onclick="show_stack_custom(&#39;error&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          Custom. Moves right, then down. Pushes to stack bottom.
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Notice" onclick="show_stack_custom2(&#39;notice&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Info" onclick="show_stack_custom2(&#39;info&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Error" onclick="show_stack_custom2(&#39;error&#39;);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          Custom. Moves left, then up. Pushes to stack top.
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Hover Over Me" onmouseover="tooltip.pnotify_display();" onmousemove="tooltip.css({&#39;top&#39;: event.clientY+12, &#39;left&#39;: event.clientX+12});" onmouseout="tooltip.pnotify_remove();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          Tooltip
        </div>

        <div class="pf-group ui-widget-content ui-corner-all">
          Current Timer: <span id="timer" style="font-family: monospace;">8 seconds</span>
          <script type="text/javascript">
            // <![CDATA[
            function update_timer_display() {
              $("#timer").text(($.pnotify.defaults.pnotify_delay/1000)+" seconds");
            }
            $(function(){
              update_timer_display();
            });
            // ]]>
          </script>
          <br style="margin-bottom: 3px;">
          <span class="ui-buttonset"><input value="Lower Timer" onclick="$.pnotify.defaults.pnotify_delay ? (function(){$.pnotify.defaults.pnotify_delay -= 500; update_timer_display();}()) : (alert(&#39;Timer is already at zero.&#39;))" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Raise Timer" onclick="(function(){$.pnotify.defaults.pnotify_delay += 500; update_timer_display();}())" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <br style="margin-bottom: 5px;">
          Benchmarking:
          <br>
          <span class="ui-buttonset"><input value="10 Notices" onclick="for (i=0; i!=10; i++) {$.pnotify({
            pnotify_title: &#39;Regular Notice&#39;,
            pnotify_text: &#39;Check me out! I\&#39;m a notice.&#39;
          });}" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="100 Notices (Careful)" onclick="for (i=0; i!=100; i++) {$.pnotify({
            pnotify_title: &#39;Regular Notice&#39;,
            pnotify_text: &#39;Check me out! I\&#39;m a notice.&#39;
          });}" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Time 100 Notices" onclick="timed_notices(100);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Time 500 Notices" onclick="timed_notices(500);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Time 1000 Notices (Dangerous)" onclick="timed_notices(1000);" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <!-- Too Dangerous Browser Killer
          <input value="1000 Notices (Dangerous!!)" onclick="for (i=0; i!=1000; i++) {$.pnotify({
            pnotify_title: 'Regular Notice',
            pnotify_text: 'Check me out! I\'m a notice.'
          });}" type="button" />
          -->
          <br style="margin-bottom: 5px;">
          <span class="ui-buttonset"><input value="Remove All Notices" onclick="$.pnotify_remove_all();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
        </div>

        <div class="pf-group ui-widget-content ui-corner-all">
          Effects built in to jQuery:
          <br>
          <span class="ui-buttonset"><input value="Show" onclick="$.pnotify({
            pnotify_title: &#39;Show Effect&#39;,
            pnotify_text: &#39;I use a different effect.&#39;,
            pnotify_animation: &#39;show&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Fade" onclick="$.pnotify({
            pnotify_title: &#39;Fade Effect&#39;,
            pnotify_text: &#39;I use a different effect.&#39;,
            pnotify_animation: &#39;fade&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Slide" onclick="$.pnotify({
            pnotify_title: &#39;Slide Effect&#39;,
            pnotify_text: &#39;I use a different effect.&#39;,
            pnotify_animation: &#39;slide&#39;
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Different In and Out" onclick="$.pnotify({
            pnotify_title: &#39;Show and Slide Effect&#39;,
            pnotify_text: &#39;I use a different effect.&#39;,
            pnotify_animation: {effect_in: &#39;show&#39;, effect_out: &#39;slide&#39;}
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <br style="margin-bottom: 5px;">
          Effects from jQuery UI:
          <br>
          Presets:
          <span class="ui-buttonset"><input value="Bouncy Fun" onclick="$(&#39;#ui_effect_in&#39;).val(&#39;scale&#39;); $(&#39;#ui_easing_in&#39;).val(&#39;easeOutElastic&#39;); $(&#39;#ui_effect_out&#39;).val(&#39;same&#39;); $(&#39;#ui_easing_out&#39;).val(&#39;same&#39;); $(&#39;#ui_speed&#39;).val(&#39;700&#39;); $(&#39;#ui_button&#39;).click();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Toss In" onclick="$(&#39;#ui_effect_in&#39;).val(&#39;drop&#39;); $(&#39;#ui_easing_in&#39;).val(&#39;easeOutBounce&#39;); $(&#39;#ui_effect_out&#39;).val(&#39;same&#39;); $(&#39;#ui_easing_out&#39;).val(&#39;easeOutCubic&#39;); $(&#39;#ui_speed&#39;).val(&#39;700&#39;); $(&#39;#ui_button&#39;).click();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Gentle Puff" onclick="$(&#39;#ui_effect_in&#39;).val(&#39;puff&#39;); $(&#39;#ui_easing_in&#39;).val(&#39;easeOutBack&#39;); $(&#39;#ui_effect_out&#39;).val(&#39;same&#39;); $(&#39;#ui_easing_out&#39;).val(&#39;easeInBack&#39;); $(&#39;#ui_speed&#39;).val(&#39;1000&#39;); $(&#39;#ui_button&#39;).click();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <br>
          <span style="display: inline-block; width: 30px;">In:</span>
          Effect
          <select id="ui_effect_in" class="ui-widget-content ui-corner-all">
            <option value="blind">Blind</option>
            <option value="bounce">Bounce</option>
            <option value="clip">Clip</option>
            <option value="drop">Drop</option>
            <option value="explode">Explode</option>
            <option value="fold">Fold</option>
            <option value="puff">Puff</option>
            <option value="scale">Scale</option>
            <option value="slide">Slide</option>
          </select>
          Easing
          <select id="ui_easing_in" class="ui-widget-content ui-corner-all">
            <option value="linear">Linear</option>
            <option value="swing">Swing</option>
            <option value="easeInQuad">easeInQuad</option>
            <option value="easeOutQuad">easeOutQuad</option>
            <option value="easeInOutQuad">easeInOutQuad</option>
            <option value="easeInCubic">easeInCubic</option>
            <option value="easeOutCubic">easeOutCubic</option>
            <option value="easeInOutCubic">easeInOutCubic</option>
            <option value="easeInQuart">easeInQuart</option>
            <option value="easeOutQuart">easeOutQuart</option>
            <option value="easeInOutQuart">easeInOutQuart</option>
            <option value="easeInQuint">easeInQuint</option>
            <option value="easeOutQuint">easeOutQuint</option>
            <option value="easeInOutQuint">easeInOutQuint</option>
            <option value="easeInSine">easeInSine</option>
            <option value="easeOutSine">easeOutSine</option>
            <option value="easeInOutSine">easeInOutSine</option>
            <option value="easeInExpo">easeInExpo</option>
            <option value="easeOutExpo">easeOutExpo</option>
            <option value="easeInOutExpo">easeInOutExpo</option>
            <option value="easeInCirc">easeInCirc</option>
            <option value="easeOutCirc">easeOutCirc</option>
            <option value="easeInOutCirc">easeInOutCirc</option>
            <option value="easeInElastic">easeInElastic</option>
            <option value="easeOutElastic">easeOutElastic</option>
            <option value="easeInOutElastic">easeInOutElastic</option>
            <option value="easeInBack">easeInBack</option>
            <option value="easeOutBack">easeOutBack</option>
            <option value="easeInOutBack">easeInOutBack</option>
            <option value="easeInBounce">easeInBounce</option>
            <option value="easeOutBounce">easeOutBounce</option>
            <option value="easeInOutBounce">easeInOutBounce</option>
          </select>
          <br style="margin-bottom: 4px;">
          <span style="display: inline-block; width: 30px;">Out:</span>
          Effect
          <select id="ui_effect_out" class="ui-widget-content ui-corner-all">
            <option value="same">Same</option>
            <option value="blind">Blind</option>
            <option value="bounce">Bounce</option>
            <option value="clip">Clip</option>
            <option value="drop">Drop</option>
            <option value="explode">Explode</option>
            <option value="fold">Fold</option>
            <option value="puff">Puff</option>
            <option value="scale">Scale</option>
            <option value="slide">Slide</option>
          </select>
          Easing
          <select id="ui_easing_out" class="ui-widget-content ui-corner-all">
            <option value="same">Same</option>
            <option value="linear">Linear</option>
            <option value="swing">Swing</option>
            <option value="easeInQuad">easeInQuad</option>
            <option value="easeOutQuad">easeOutQuad</option>
            <option value="easeInOutQuad">easeInOutQuad</option>
            <option value="easeInCubic">easeInCubic</option>
            <option value="easeOutCubic">easeOutCubic</option>
            <option value="easeInOutCubic">easeInOutCubic</option>
            <option value="easeInQuart">easeInQuart</option>
            <option value="easeOutQuart">easeOutQuart</option>
            <option value="easeInOutQuart">easeInOutQuart</option>
            <option value="easeInQuint">easeInQuint</option>
            <option value="easeOutQuint">easeOutQuint</option>
            <option value="easeInOutQuint">easeInOutQuint</option>
            <option value="easeInSine">easeInSine</option>
            <option value="easeOutSine">easeOutSine</option>
            <option value="easeInOutSine">easeInOutSine</option>
            <option value="easeInExpo">easeInExpo</option>
            <option value="easeOutExpo">easeOutExpo</option>
            <option value="easeInOutExpo">easeInOutExpo</option>
            <option value="easeInCirc">easeInCirc</option>
            <option value="easeOutCirc">easeOutCirc</option>
            <option value="easeInOutCirc">easeInOutCirc</option>
            <option value="easeInElastic">easeInElastic</option>
            <option value="easeOutElastic">easeOutElastic</option>
            <option value="easeInOutElastic">easeInOutElastic</option>
            <option value="easeInBack">easeInBack</option>
            <option value="easeOutBack">easeOutBack</option>
            <option value="easeInOutBack">easeInOutBack</option>
            <option value="easeInBounce">easeInBounce</option>
            <option value="easeOutBounce">easeOutBounce</option>
            <option value="easeInOutBounce">easeInOutBounce</option>
          </select>
          <br style="margin-bottom: 4px;">
          Speed (ms):
          <input type="text" size="8" id="ui_speed" value="600" class="ui-widget-content ui-corner-all">
          <span class="ui-buttonset"><input value="Notify!" style="margin-left: 2em;" onclick="
            var effect_in = $(&#39;#ui_effect_in&#39;).val();
            var easing_in = $(&#39;#ui_easing_in&#39;).val();
            var effect_out = $(&#39;#ui_effect_out&#39;).val();
            var easing_out = $(&#39;#ui_easing_out&#39;).val();
            if (effect_out == &#39;same&#39;)
              effect_out = effect_in;
            if (easing_out == &#39;same&#39;)
              easing_out = easing_in;
            var speed = $(&#39;#ui_speed&#39;).val();
            if (speed.match(/^\d+$/))
              speed = parseInt(speed);
            var options_in = {easing: easing_in};
            var options_out = {easing: easing_out};
            if (effect_in == &#39;scale&#39;)
              options_in.percent = 100;
            if (effect_out == &#39;scale&#39;)
              options_out.percent = 0;
            $.pnotify({
              pnotify_title: &#39;jQuery UI Effect&#39;,
              pnotify_text: &#39;I use an effect from jQuery UI.&#39;,
              pnotify_animate_speed: speed,
              pnotify_animation: {
                &#39;effect_in&#39;: effect_in,
                &#39;options_in&#39;: options_in,
                &#39;effect_out&#39;: effect_out,
                &#39;options_out&#39;: options_out
              }
            });
          " type="button" id="ui_button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <br style="margin-bottom: 5px;">
          Custom Functions (Uses CSS3):
          <br>
          <span class="ui-buttonset"><input value="One Function" onclick="$.pnotify({
            pnotify_title: &#39;Custom Function&#39;,
            pnotify_text: &#39;I use a different effect.&#39;,
            pnotify_animation: function(status, callback, pnotify){
              var source_note = &#39;Always call the callback when the animation completes.&#39;;
              var cur_angle = 0;
              var cur_opacity_scale = 0;
              if (status == &#39;out&#39;)
                cur_opacity_scale = 1;
              var timer = setInterval(function(){
                cur_angle += 10;
                if (cur_angle == 360) {
                  cur_angle = 0;
                  cur_opacity_scale = 1;
                  if (status == &#39;out&#39;)
                    cur_opacity_scale = 0;
                  clearInterval(timer);
                } else {
                  cur_opacity_scale = cur_angle / 360;
                  if (status == &#39;out&#39;)
                    cur_opacity_scale = 1 - cur_opacity_scale;
                }
                pnotify.css({
                  &#39;-moz-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;-webkit-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;-o-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;-ms-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;filter&#39;: (&#39;progid:DXImageTransform.Microsoft.BasicImage(rotation=&#39;+(cur_angle / 360 * 4)+&#39;)&#39;)
                }).fadeTo(0, cur_opacity_scale);
                if (cur_angle == 0) {
                  if (status == &#39;out&#39;)
                      pnotify.hide();
                  callback();
                }
              }, 20);
            }
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
          <span class="ui-buttonset"><input value="Two Functions" onclick="$.pnotify({
            pnotify_title: &#39;Custom Functions&#39;,
            pnotify_text: &#39;I use a different effect.&#39;,
            pnotify_animation: {effect_in: function(status, callback, pnotify){
              var source_note = &#39;Always call the callback when the animation completes.&#39;;
              var cur_angle = 0;
              var cur_opacity_scale = 0;
              var timer = setInterval(function(){
                cur_angle += 10;
                if (cur_angle == 360) {
                  cur_angle = 0;
                  cur_opacity_scale = 1;
                  clearInterval(timer);
                } else {
                  cur_opacity_scale = cur_angle / 360;
                }
                pnotify.css({
                  &#39;-moz-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;-webkit-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;-o-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;-ms-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;filter&#39;: (&#39;progid:DXImageTransform.Microsoft.BasicImage(rotation=&#39;+(cur_angle / 360 * 4)+&#39;)&#39;)
                }).fadeTo(0, cur_opacity_scale);
                if (cur_angle == 0)
                  callback();
              }, 20);
            }, effect_out: function(status, callback, pnotify){
              var source_note = &#39;Always call the callback when the animation completes.&#39;;
              var cur_angle = 0;
              var cur_opacity_scale = 1;
              var timer = setInterval(function(){
                cur_angle += 10;
                if (cur_angle == 360) {
                  cur_angle = 0;
                  cur_opacity_scale = 0;
                  clearInterval(timer);
                } else {
                  cur_opacity_scale = cur_angle / 360;
                  cur_opacity_scale = 1 - cur_opacity_scale;
                }
                pnotify.css({
                  &#39;-moz-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;-webkit-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;-o-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;-ms-transform&#39;: (&#39;rotate(&#39;+cur_angle+&#39;deg) scale(&#39;+cur_opacity_scale+&#39;)&#39;),
                  &#39;filter&#39;: (&#39;progid:DXImageTransform.Microsoft.BasicImage(rotation=&#39;+(cur_angle / 360 * 4)+&#39;)&#39;)
                }).fadeTo(0, cur_opacity_scale);
                if (cur_angle == 0) {
                  pnotify.hide();
                  callback();
                }
              }, 20);
            }}
          });" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span>
        </div>

        <div class="pf-group ui-widget-content ui-corner-all">
          This isn't really a feature of Pines Notify, but it's cool:
          <br>
          <ol>
            <li><span class="ui-buttonset"><input value="Display a JavaScript Alert" onclick="alert(&#39;I\&#39;m a standard alert, called with alert().&#39;)" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span></li>
            <li><span class="ui-buttonset"><input value="Consume alert()" onclick="consume_alert();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span></li>
            <li>Repeat step 1.</li>
            <li><span class="ui-buttonset"><input value="Release alert()" onclick="release_alert();" type="button" class="ui-button ui-widget ui-state-default ui-corner-left" role="button" aria-disabled="false"><input type="button" value="{}" title="Show source code." class="ui-button ui-widget ui-state-default ui-corner-right" role="button" aria-disabled="false"></span></li>
          </ol>
        </div>
        <h2>Theming</h2>
        <div>
          <p style="margin: 0; clear: both;">
            The Pines Notify plugin uses the jQuery UI CSS Framework to
            style its look and feel, including colors and background
            textures. We recommend using the ThemeRoller tool to create
            and download custom themes that are easy to build and
            maintain.
          </p>
          <br>
          <p style="margin: 0; clear: both;">
            If a deeper level of customization is needed, there are
            widget-specific classes referenced within the
            jquery.pnotify.default.css stylesheet that can be modified.
            These classes are highlighted in bold below.
          </p>
        </div>
        <h2>Sample markup with jQuery UI CSS Framework classes</h2>
        <div>
          <div style="margin: 0; clear: both; padding-left: 10px;">
            &lt;div class="<strong>ui-pnotify</strong> ui-widget ui-helper-clearfix" style="width: 300px; opacity: 1; display: block; right: 15px; top: 15px;"&gt;
            <div style="margin: 0; clear: both; padding-left: 10px;">
              &lt;div class="<strong>ui-pnotify-shadow</strong> ui-widget-shadow"&gt;&lt;/div&gt; <small>(This div only appears when shadow is turned on.)</small>
            </div>
            <div style="margin: 0; clear: both; padding-left: 10px;">
              &lt;div class="<strong>ui-pnotify-container</strong> ui-corner-all ui-state-highlight" style="min-height: 16px;"&gt;
              <div style="margin: 0; clear: both; padding-left: 10px;">
                &lt;div class="<strong>ui-pnotify-closer</strong>" style="cursor: pointer; display: none;"&gt;
                <div style="margin: 0; clear: both; padding-left: 10px;">
                  &lt;span class="ui-icon ui-icon-circle-close"&gt;&lt;/span&gt;
                </div>
                &lt;/div&gt;<br>
                &lt;div class="<strong>ui-pnotify-icon</strong>"&gt;
                <div style="margin: 0; clear: both; padding-left: 10px;">
                  &lt;span class="ui-icon ui-icon-info"&gt;&lt;/span&gt;
                </div>
                &lt;/div&gt;<br>
                &lt;div class="<strong>ui-pnotify-title</strong>"&gt;Pines Notify&lt;/div&gt;<br>
                &lt;div class="<strong>ui-pnotify-text</strong>"&gt;Welcome to Pines Notify.&lt;/div&gt;
              </div>
              &lt;/div&gt;
            </div>
            &lt;/div&gt;
          </div>
          <p>
            <span style="padding: 8px; background-image: none; font-weight: bold;" class="ui-state-default ui-priority-secondary">Note: This is a sample of markup generated by Pines Notify, not markup you should use to create a notice. You don't need markup for that.</span>
          </p>
        </div>
        <h2>Installation</h2>
        <p>Installation is simple. Include jQuery 1.4 (or higher) and jQuery UI (only the CSS is required). Then include the following files:</p>
        <div class="ui-helper-clearfix">
          <div class="featurelist">
            <ul>
              <li><span class="ui-icon ui-icon-bullet"></span>jquery.pnotify.js or jquery.pnotify.min.js (Minified)</li>
              <li><span class="ui-icon ui-icon-bullet"></span>jquery.pnotify.default.css</li>
            </ul>
          </div>
        </div>
        <p>If you want to use jQuery UI effect animations, you also need to include the jQuery UI JavaScript.</p>
        <p style="text-align: center;">
          <button type="button" onclick="window.location=&#39;https://sourceforge.net/projects/pines/files/pnotify/1.1/pnotify-1.1.0.zip/download&#39;;" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button" aria-disabled="false"><span class="ui-button-text"><strong style="font-size: large;">Download Pines Notify</strong></span></button>
        </p>
      </div>
    </div>
    <!-- Would love to keep this visible, but it causes the page to not validate.
    <div xmlns:cc="http://creativecommons.org/ns#" about="http://www.flickr.com/photos/barloventomagico/2435316564/"><a rel="cc:attributionURL" href="http://www.flickr.com/photos/barloventomagico/">http://www.flickr.com/photos/barloventomagico/</a> / <a rel="license" href="http://creativecommons.org/licenses/by-nc-nd/2.0/">CC BY-NC-ND 2.0</a></div>
    -->
  
<div class="ui-pnotify-history-container ui-state-default ui-corner-bottom" style="top: -67px; ">
<div class="ui-pnotify-history-header">Redisplay</div>
<button class="ui-pnotify-history-all ui-state-default ui-corner-all">All</button>
<button class="ui-pnotify-history-last ui-state-default ui-corner-all">Last</button>
<span class="ui-pnotify-history-pulldown ui-icon ui-icon-grip-dotted-horizontal"></span>
</div>
<div class="ui-pnotify " style="display: none; width: 300px; ">
  <div class="ui-widget ui-widget-content ui-corner-all ui-pnotify-container ui-state-highlight" style="min-height: 16px; ">
  <div class="ui-pnotify-closer" style="cursor: pointer; display: none; "><span class="ui-icon ui-icon-close"></span></div>
  <div class="ui-pnotify-sticker" style="cursor: pointer; display: none; "><span class="ui-icon ui-icon-pin-s"></span></div>
  <div class="ui-pnotify-icon"><span class="ui-icon ui-icon-comment"></span></div><div class="ui-pnotify-title">Tooltip</div>
  <div class="ui-pnotify-text">I'm not in a stack. I'm positioned like a tooltip with JavaScript.</div></div>
</div>


  
  <div id="window-resizer-tooltip">
    <a href="http://pinesframework.org/pnotify/#" title="Edit settings"
      style="background-image: url(includes/icon_19.png);"></a><span
      class="tooltipTitle">Window size: </span><span class="tooltipWidth"
      id="winWidth"></span> x <span class="tooltipHeight" id="winHeight"></span><br><span
      class="tooltipTitle">Viewport size: </span><span class="tooltipWidth"
      id="vpWidth"></span> x <span class="tooltipHeight" id="vpHeight"></span>
  </div>
</body>
</html>